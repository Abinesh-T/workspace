package com.abi.model;

import java.util.List;

import org.springframework.transaction.annotation.Transactional;

import org.hibernate.Session;
import org.hibernate.Transaction;
import org.hibernate.query.Query;
import org.springframework.stereotype.Repository;


@Repository("UserDAO")
@Transactional
public class UserDAO {

	private Transaction trans;
	private Session sess;
	private DbConfig db;
	private boolean b = true;
	/* (non-Javadoc)
	 * @see com.model.IUserDAO#insertUser(com.model.User)
	 */
	public UserDAO()
	{
		db = new DbConfig();
	}
	
	public boolean insertUser(User p) {
		try
		{
			sess = db.getSess();
			trans = sess.beginTransaction();
			sess.save(p);
			trans.commit();
		}
		catch(Exception exp)
		{
			exp.printStackTrace();
			trans.rollback();
			b = false;
		}
		return b;
	}

	public List<User> getUsers() {

		sess = db.getSess();
		Query<User> quer = sess.createQuery("FROM User", User.class);
		List<User> al = quer.getResultList();
		return al;
	}
	public User getUser(int id)
	{
		sess = db.getSess();
		return (User)sess.get(User.class, Integer.valueOf(id));
	}
	
	public boolean updateUser(User p)
	{
		try
		{
		sess = db.getSess();
		trans = sess.beginTransaction();
		sess.update(p);
		trans.commit();
		}
		catch(Exception exp)
		{
			exp.printStackTrace();
			trans.rollback();
			b = false;
		}
		return b;

	}
	
	public boolean deleteUser(User p)
	{
		try
		{
			sess = db.getSess();
			trans = sess.beginTransaction();
			sess.delete(p);
			trans.commit();
		}
		catch(Exception ex) {
			ex.printStackTrace();
			trans.rollback();
			b= false;
		}
		return b;
	}
	
}
